// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test Login container should render with given state from Redux store 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "#008388",
        },
        Object {
          "display": "flex",
          "flex": 1,
        },
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      Object {
        "bottom": 0,
        "flex": 1,
        "left": 0,
        "marginTop": 70,
        "padding": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <RCTScrollView
      style={
        Object {
          "flex": 1,
          "paddingLeft": 30,
          "paddingRight": 30,
          "paddingTop": 20,
        }
      }
    >
      <View>
        <Text
          style={
            Object {
              "color": "#ffffff",
              "fontSize": 34,
              "fontWeight": "300",
              "marginBottom": 40,
            }
          }
        >
          Log In
        </Text>
        <View
          style={
            Array [
              Object {
                "marginBottom": 30,
              },
              Object {
                "display": "flex",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 14,
                  "fontWeight": "700",
                },
                Object {
                  "marginBottom": 20,
                },
              ]
            }
          >
            EMAIL ADDRESS
          </Text>
          <View
            style={
              Object {
                "bottom": 12,
                "position": "absolute",
                "right": 0,
                "transform": Array [
                  Object {
                    "scale": 0.01,
                  },
                ],
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <TextInput
            allowFontScaling={true}
            autoCorrect={false}
            autoFocus={true}
            keyboardType="email-address"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            secureTextEntry={false}
            selectionColor="white"
            style={
              Array [
                Object {
                  "borderBottomColor": "#ffffff",
                  "color": "#ffffff",
                },
                undefined,
                Object {
                  "borderBottomWidth": 1,
                  "paddingTop": 5,
                },
              ]
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            Array [
              Object {
                "marginBottom": 30,
              },
              Object {
                "display": "flex",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#ffffff",
                  "fontSize": 14,
                  "fontWeight": "700",
                },
                Object {
                  "marginBottom": 20,
                },
              ]
            }
          >
            PASSWORD
          </Text>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
                "position": "absolute",
                "right": 0,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#ffffff",
                  "fontWeight": "700",
                }
              }
            >
              Show
            </Text>
          </View>
          <View
            style={
              Object {
                "bottom": 12,
                "position": "absolute",
                "right": 0,
                "transform": Array [
                  Object {
                    "scale": 0.01,
                  },
                ],
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "#ffffff",
                    "fontSize": 20,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <TextInput
            allowFontScaling={true}
            autoCorrect={false}
            keyboardType="default"
            onChangeText={[Function]}
            rejectResponderTermination={true}
            secureTextEntry={true}
            selectionColor="white"
            style={
              Array [
                Object {
                  "borderBottomColor": "#ffffff",
                  "color": "#ffffff",
                },
                undefined,
                Object {
                  "borderBottomWidth": 1,
                  "paddingTop": 5,
                },
              ]
            }
            underlineColorAndroid="transparent"
          />
        </View>
      </View>
    </RCTScrollView>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "bottom": 20,
          "position": "absolute",
          "right": 20,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "bottom": 20,
            "paddingTop": 5,
            "right": 20,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "opacity": 0.2,
              },
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffffff",
                "borderRadius": 50,
                "height": 50,
                "justifyContent": "center",
                "width": 50,
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#008388",
                  "fontSize": 32,
                },
                Object {
                  "marginRight": -2,
                  "marginTop": -2,
                },
                Object {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "zIndex": 9,
        },
        Object {
          "marginTop": 0,
        },
      ]
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#ffffff",
          "flex": 1,
          "height": 80,
          "padding": 10,
          "transform": Array [
            Object {
              "translateY": -80,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "flexDirection": "row",
            "marginBottom": 2,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "flex": 1,
                "flexDirection": "row",
                "fontSize": 14,
                "marginBottom": 2,
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#d93900",
                  "fontSize": 14,
                  "marginBottom": 2,
                  "marginRight": 5,
                },
              ]
            }
          >
            Error
          </Text>
          <Text
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "fontSize": 14,
                "marginBottom": 2,
              }
            }
          >
            Those credentials don't look right.
             
            Please try again.
             
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
            "position": "absolute",
            "right": 10,
            "top": 10,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": "#d8d8d8",
                "fontSize": 20,
              },
              undefined,
              Object {
                "fontFamily": "FontAwesome",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
              Object {},
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;
